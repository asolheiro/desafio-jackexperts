name: Desafio JackExperts - Pipeline

on: 
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:27.3.1-dind
        options: --privileged
    env:
      TAG: ${{ github.sha }}
      IMAGE: asolheiro/desafio-jackexperts:${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          tags: asolheiro/desafio-jackexperts:${{ github.sha }}
          outputs: type=docker, dest=/tmp/desafio-jackexperts.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: desafio-jackexperts.tar
          path: /tmp/desafio-jackexperts.tar

  test:
    name: Run Trivy Security scan
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: docker:27.3.1-dind
        options: --privileged
    env:
      #DOCKER_DRIVER: overlay2
      #DOCKER_HOST: tcp://docker:2375/
      #DOCKER_TLS_CERTDIR: ""
      IMAGE: asolheiro/desafio-jackexperts:$TAG
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dowload artifact
        uses: actions/download-artifact@v4
        with:
          name: desafio-jackexperts.tar
          path: /tmp
        
      - name: Load Docker image
        run: |
          ls -a /tmp 
          docker load --input /tmp/desafio-jackexperts.tar
          docker image ls -a

      - name: Install Trivy
        run: |
          TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
          wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -

#     - name: Run Trivy scan
#        run: ./trivy image --exit-code 0 --no-progress --format sarif -o report.sarif $IMAGE

#     - name: Fail on CRITICAL vulnerabilities
#        run: ./trivy image --exit-code 1 --severity CRITICAL --no-progress $IMAGE

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: asolheiro/desafio-jackexperts:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  push:
    name: Push Docker Image      
    runs-on: ubuntu-latest
    needs: test
    services:
      docker:
        image: docker:27.3.1-dind
        options: --privileged
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dowload artifact
        uses: actions/download-artifact@v4
        with:
          name: desafio-jackexperts.tar

      - name: Load Docker Image
        run: docker load -i desafio-jackexperts.tar

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secretes.DOCKERHUB_TOKEN }}
        
      - name: Push to DockerHub
        run: docker push $IMAGE

  update:
    name: Update Helm Chart
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone Helm repository
        run: git clone https://${{ secrets.user_github }}:${{ secrets.GITHUB_TOKEN }}@github.com/rmndvngrpslhr/desafio-jackexperts.git

      - name: Update Helm values
        run: |
          cd desafio-jackexperts/helm
          yq e -i ".image.tag = \"${{ github.sha }}\"" .values.yaml
          git config user.email "avgsolheiro@gmail.com"
          git config user.name ${{ secrets.user_github }}
          git add .
          git commit -m "Update image tag to ${{ github.sha }}"
          git push https://${{ secrets.user_github }}:${{ secrets.GITHUB_TOKEN }}@github.com/rmndvngrpslhr/desafio-jackexperts.git

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: update
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash 
          tar xzf run: docker push $IMAGE https://${{ secrets.user_github }}:${{ secrets.GITHUB_TOKEN }}@github.com/rmndvngrpslhr/desafio-jackexperts.git
          cd /rmndvngrpslhr/desafio-jackexperts/helm
          helm upgrade -i desafio-jackexperts -f values.yaml -n nginx-desafio .
