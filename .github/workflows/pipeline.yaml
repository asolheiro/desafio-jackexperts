name: Desafio JackExperts - Pipeline

on: 
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:27.3.1-dind
        options: --privileged
    env:
      TAG: ${{ github.sha }}
      IMAGE: asolheiro/desafio-jackexperts:${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.IMAGE }}
          outputs: type=docker, dest=/tmp/desafio-jackexperts.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: desafio-jackexperts.tar
          path: /tmp/desafio-jackexperts.tar

  test:
    name: Run Trivy Security scan
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: docker:27.3.1-dind
        options: --privileged
    env:
      IMAGE: asolheiro/desafio-jackexperts:${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: desafio-jackexperts.tar
          path: /tmp
        
      - name: Load Docker image
        run: |
          docker load --input /tmp/desafio-jackexperts.tar
          docker image ls -a

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE }}
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Run Trivy scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: config
          hide-progress: true
          output: trivy-results.txt

      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy.txt ]]; then
            {
              echo "### Security Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo 'terraform'
              cat trivy.txt
              echo ''
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi
         
      - name: Upload report Trivy
        uses: actions/upload-artifact@v4
        with:
            name: Trivy
            path: |
                trivy-results.txt

          
      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          format: 'github'
          output: 'dependency-results.sbom.json'
          image-ref: '.'
          github-pat: ${{ secrets.GITHUB_TOKEN }}

  push:
    name: Push Docker Image      
    runs-on: ubuntu-latest
    needs: test
    services:
      docker:
        image: docker:27.3.1-dind
        options: --privileged
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dowload artifact
        uses: actions/download-artifact@v4
        with:
          name: desafio-jackexperts.tar

      - name: Load Docker Image
        run: docker load -i desafio-jackexperts.tar

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Push to DockerHub
        run: docker image push asolheiro/desafio-jackexperts:${{ github.sha }}

  update:
    name: Update Helm Chart
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone Helm repository
        run: git clone https://${{ secrets.user_github }}:${{ secrets.GITHUB_TOKEN }}@github.com/rmndvngrpslhr/desafio-jackexperts.git

      - name: Update Helm values
        run: |
          cd desafio-jackexperts/helm
          yq e -i ".image.tag = \"${{ github.sha }}\"" ./values.yaml
          git config user.email "avgsolheiro@gmail.com"
          git config user.name ${{ secrets.user_github }}
          git add .
          git commit -m "Update image tag to ${{ github.sha }}"
          git push https://${{ secrets.user_github }}:${{ secrets.GITHUB_TOKEN }}@github.com/asolheiro/desafio-jackexperts.git

  certs:
    name: Creating certificates
    runs-on: ubuntu-latest
    needs: update
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_BASE64" | base64 --decode > ~/.kube/config
        env:
          KUBECONFIG_BASE64: ${{ secrets.KUBECONFIG_BASE64 }}

      - name: Install cert-manager with Helm
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          
          helm upgrade -i cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --version v1.12.0 \
            --set installCRDs=true

      - name: Verify certs install
        run:  kubectl get pods --namespace cert-manager

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: certs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_BASE64" | base64 --decode > ~/.kube/config
        env:
          KUBECONFIG_BASE64: ${{ secrets.KUBECONFIG_BASE64 }}
          
      - name: Verify kubectl access
        run:  kubectl get nodes -A

      - name: Handle chart
        run: |
          git clone https://${{ secrets.user_github }}:${{ secrets.GITHUB_TOKEN }}@github.com/rmndvngrpslhr/desafio-jackexperts.git
          cd ./helm
          ls -lha ./
          helm upgrade -i desafio-jackexperts . -f values.yaml --debug

      - name: Verify ClusterIssuer
        run: kubectl get clusterissuer -A

      - name: Verify Certificate status
        run: kubectl describe certificate domain-cert -n desafio-nginx

      - name: Verify Ingress
        run: kubectl describe ingress desafio-jackexperts-ingress -n desafio-nginx

      
      



  


